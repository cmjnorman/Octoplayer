<Window x:Class="OctoplayerFrontend.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OctoplayerFrontend" 
        mc:Ignorable="d"
        Closed="Window_Closed"
        Title="Octoplayer" Icon="assets\octoplayer-icon.png" Height="1080" Width="1920" FontSize="14" Background="Black" >
    <Window.Resources>
        <!--Program Colours-->
        <SolidColorBrush x:Key="OctoOrange" Color="#E18A07"/>
        <!--Button Icons-->
        <Path x:Key="PlayIcon" Data="M 5,2 L 5,48 L 45,25 L 5,2 L 5,25"  Width="50" Height="50" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Path x:Key="PauseIcon" Width="50" Height="50" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}">
            <Path.Data>
                <GeometryGroup>
                    <RectangleGeometry Rect="5,2,12,46"/>
                    <RectangleGeometry Rect="33,2,12,46"/>
                </GeometryGroup>
            </Path.Data>
        </Path>
        <Path x:Key="PreviousIcon" Width="30" Height="30" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}">
            <Path.Data>
                <GeometryGroup>
                    <PathGeometry>
                        <PathFigure StartPoint="29,2.5" IsClosed="True" IsFilled="true">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <LineSegment Point="29,27.5"/>
                                    <LineSegment Point="7,15"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                    <RectangleGeometry Rect="1,2,6,26"/>
                </GeometryGroup>
            </Path.Data>
        </Path>
        <Path x:Key="NextIcon" Width="30" Height="30" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}">
            <Path.Data>
                <GeometryGroup>
                    <PathGeometry>
                        <PathFigure StartPoint="1,2.5" IsClosed="True" IsFilled="true">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <LineSegment Point="1,27.5"/>
                                    <LineSegment Point="23,15"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                    <RectangleGeometry Rect="23,2,6,26"/>
                </GeometryGroup>
            </Path.Data>
        </Path>
        <Path x:Key="ShuffleIcon" Width="30" Height="30" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}">
            <Path.Data>
                <GeometryGroup>
                    <PathGeometry>
                        <PathFigure StartPoint="3,6" IsClosed="True" IsFilled="True">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <BezierSegment Point1="12, 6" Point2="12, 21" Point3="21, 21"/>
                                    <LineSegment Point="21, 24"/>
                                    <BezierSegment Point1="12, 24" Point2="12, 9" Point3="3, 9"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                    <PathGeometry>
                        <PathFigure StartPoint="3,24" IsClosed="True" IsFilled="True">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <BezierSegment Point1="12, 24" Point2="12, 9" Point3="21, 9"/>
                                    <LineSegment Point="21, 6"/>
                                    <BezierSegment Point1="12, 6" Point2="12, 21" Point3="3, 21"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                    <PathGeometry>
                        <PathFigure StartPoint="21,4" IsClosed="True" IsFilled="True">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <LineSegment Point="26, 7.5"/>
                                    <LineSegment Point="21, 11"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                    <PathGeometry>
                        <PathFigure StartPoint="21,19" IsClosed="True" IsFilled="True">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <LineSegment Point="26, 22.5"/>
                                    <LineSegment Point="21, 26"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry>
                </GeometryGroup>
            </Path.Data>
        </Path>
        <!--Value Converters-->
        <local:ListToStringConverter x:Key="ListToStringConverter"/>
        <local:BoolToInvertedBoolConverter x:Key="BoolToInvertedBoolConverter"/>
        <!--Track Data-->
        <TextBlock x:Key="Title"/>
        <TextBlock x:Key="Album"/>
        <TextBlock x:Key="Artists"/>
        <TextBlock x:Key="TrackInfo"/>
        <TextBlock x:Key="DiscInfo"/>
        <TextBlock x:Key="Remixers"/>
        <TextBlock x:Key="Year"/>
        <TextBlock x:Key="Rating"/>
        <TextBlock x:Key="Genres"/>
        <TextBlock x:Key="BPM"/>
        <TextBlock x:Key="Key"/>
        <!--Browser Item Templates-->
        <DataTemplate x:Key="TrackAndAlbumBrowserItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Artwork}" Height="100"/>
                <Grid Grid.Column="1" Margin="10, 0, 0, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding Title}" FontSize="20" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                    <TextBlock Text="{Binding Artists, Converter={StaticResource ListToStringConverter}}" Grid.Row="1" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                    <TextBlock Text="{Binding Album}" Grid.Row="2" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ArtistAndGenreBrowserItemTemplate">
            <TextBlock Text="{Binding Name}" FontSize="20" Padding="0" Foreground="{StaticResource OctoOrange}"/>
        </DataTemplate>
        <DataTemplate x:Key="AlbumTrackBrowserItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding TrackNumber}" Width="30" FontSize="30" Padding="0" HorizontalAlignment="Center" Foreground="{StaticResource OctoOrange}"/>
                <Image Source="{Binding Artwork}" Grid.Column="1" Margin="10, 0, 0, 0" Height="100"/>
                <Grid Grid.Column="2" Margin="10, 0, 0, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding Title}" FontSize="20" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                    <TextBlock Text="{Binding Artists, Converter={StaticResource ListToStringConverter}}" Grid.Row="1" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <!--Custom Element Styling-->
        <Style x:Key="LibraryBrowserItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource OctoOrange}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Track Name="PART_Track" ViewportSize="NaN" Grid.Row="1" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Height="50">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Path Width="14" Height="50" Stroke="{StaticResource OctoOrange}" Fill="{StaticResource OctoOrange}">
                                                            <Path.Data>
                                                                <GeometryGroup FillRule="Nonzero">
                                                                    <EllipseGeometry Center="7,5" RadiusX="5" RadiusY="5"/>
                                                                    <RectangleGeometry Rect="2,5,10,40"/>
                                                                    <EllipseGeometry Center="7,45" RadiusX="5" RadiusY="5"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                        </Path>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource OctoOrange}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource OctoOrange}"/>
            <Setter Property="Padding" Value="5, 0, 5, 0"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderThickness" Value="3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <TextBox x:Key="SearchPromptText" BorderThickness="0" Width="10000" Height="500" FontSize="20" VerticalContentAlignment="Center" Foreground="Gray" Padding="5, 0, 0, 0" FontStyle="Italic"/>
        <VisualBrush x:Key="SearchPrompt" Stretch="None" AlignmentX="Left" AlignmentY="Center" Visual="{DynamicResource SearchPromptText}"/>
        <Style x:Key="LibrarySearchBar" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Padding" Value="5, 0, 0, 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{StaticResource OctoOrange}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="{DynamicResource SearchPrompt}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="Black"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                <Path x:Name="arrow" Grid.Row="1" Data="M 4,6 L 10,14 L 16,6" HorizontalAlignment="Center" StrokeThickness="2" Stroke="#553300" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 4,14  L 10,6  L 16,14"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TrackDataExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" Background="{TemplateBinding Background}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MinWidth="0" Margin="1" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border BorderThickness="1" BorderBrush="#2F2F2F" Background="#553300" Height="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="#2F2F2F" Background="{StaticResource OctoOrange}" Height="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="20" Width="20" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"></Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="TrackSlider" TargetType="Slider">
            <Setter Property="IsMoveToPointEnabled" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template" Value="{StaticResource Slider}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource OctoOrange}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#553300"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        <Style x:Key="DisableableButton" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource OctoOrange}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#553300"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleableButton" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Tag" Value="Off"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="On">
                                <Setter Property="Foreground" Value="{StaticResource OctoOrange}"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="Off">
                                <Setter Property="Foreground" Value="#553300"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="10" >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="GridLibrarySelection">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Style="{DynamicResource RoundedButton}" x:Name="BtnSelectFolder" Content="Select Library Folder" Padding="5, 0, 5, 0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Click="BtnSelectFolder_Click" Background="Transparent" Foreground="{StaticResource OctoOrange}" BorderBrush="{StaticResource OctoOrange}"/>
            <Label x:Name="LblFilesLoaded" Grid.Column="1" VerticalAlignment="Center" Foreground="{StaticResource OctoOrange}"/>
        </Grid>
        <Grid Grid.Row="1" Margin="0, 10, 0, 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="GridPlayer">
                <Grid.RowDefinitions>
                    <RowDefinition Height="500"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Image x:Name="ImgAlbumArt" VerticalAlignment="Top"/>
                <Grid Grid.Row="1" Margin="0, 10, 0, 10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Content="{DynamicResource Title}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" FontSize="20" Foreground="{StaticResource OctoOrange}"/>
                    <Label Content="{DynamicResource Artists}" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                    <Label Content="{DynamicResource Album}" Grid.Row="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                </Grid>
                <Grid Grid.Row="2" MinWidth="300" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="RemixersInfo">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Remixers:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource Remixers}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Track:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource TrackInfo}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="1" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Disc:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource DiscInfo}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Year:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource Year}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="2" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Rating:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource Rating}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Genre(s):" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource Genres}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Bpm:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource BPM}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                    <Grid Grid.Row="4" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Key:" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                        <Label Content="{DynamicResource Key}" Grid.Column="1" Foreground="{StaticResource OctoOrange}"/>
                    </Grid>
                </Grid>
                <ToggleButton x:Name="QueueToggle" Grid.Row="3" Width="400" Height="60" HorizontalAlignment="Center" VerticalAlignment="Bottom" Background="#FF313131" BorderThickness="1" BorderBrush="{StaticResource OctoOrange}" IsHitTestVisible="{Binding ElementName=QueuePopup, Path=IsOpen, Converter={StaticResource BoolToInvertedBoolConverter}}" Click="QueueToggle_Click">
                    <Grid>
                        <ItemsControl x:Name="NextTrackItemControl">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="400">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="75"/>
                                            <ColumnDefinition Width="325"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Up Next:" Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource OctoOrange}"/>
                                        <Grid Grid.Column="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Title}" FontSize="20" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                                            <TextBlock Text="{Binding Artists}" Grid.Row="1" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ToggleButton>
                <Popup x:Name="QueuePopup" Placement="Top" HorizontalAlignment="Center" Width="400" MaxHeight="700" PlacementTarget="{Binding ElementName=QueueToggle}" IsOpen="{Binding ElementName=QueueToggle, Path=IsChecked}" StaysOpen="False">
                    <ListBox x:Name="QueueListBox" Background="#FF313131" BorderThickness="1" BorderBrush="{StaticResource OctoOrange}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseDoubleClick="QueueListBox_MouseDoubleClick" MouseRightButtonUp="ListBoxRightClick">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="75"/>
                                        <ColumnDefinition Width="325"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding RelativePosition}" FontSize="30" Padding="0" HorizontalAlignment="Center" Foreground="{StaticResource OctoOrange}"/>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Binding Title}" FontSize="20" Padding="0"  Foreground="{StaticResource OctoOrange}"/>
                                        <TextBlock Text="{Binding Artists}" Grid.Row="1" Padding="0" Foreground="{StaticResource OctoOrange}"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Popup>
            </Grid>
            <Grid x:Name="LibraryBrowser" Grid.Column="1" Margin="10, 0, 0, 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="BtnViewTracks" Style="{StaticResource RoundedButton}" Content="Tracks" Margin="5,0,5,0" FontSize="20" Background="Transparent" Foreground="{StaticResource OctoOrange}" BorderBrush="{StaticResource OctoOrange}" Click="SelectBrowserView"/>
                    <Button x:Name="BtnViewAlbums" Style="{StaticResource RoundedButton}" Grid.Column="1" Content="Albums" Margin="5,0,5,0" FontSize="20" Background="Transparent" Foreground="{StaticResource OctoOrange}" BorderBrush="{StaticResource OctoOrange}" Click="SelectBrowserView"/>
                    <Button x:Name="BtnViewArtists" Style="{StaticResource RoundedButton}" Grid.Column="2" Content="Artists" Margin="5,0,5,0" FontSize="20" Background="Transparent" Foreground="{StaticResource OctoOrange}" BorderBrush="{StaticResource OctoOrange}" Click="SelectBrowserView"/>
                    <Button x:Name="BtnViewGenres" Style="{StaticResource RoundedButton}" Grid.Column="3" Content="Genres" Margin="5,0,5,0" FontSize="20" Background="Transparent" Foreground="{StaticResource OctoOrange}" BorderBrush="{StaticResource OctoOrange}" Click="SelectBrowserView"/>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="GridControls" Grid.Row="2" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button x:Name="BtnShuffle" Style="{StaticResource ToggleableButton}" Content="{StaticResource ShuffleIcon}" Grid.Column="1" Padding="0" BorderThickness="0" Width="30" Click="BtnShuffle_Click"/>
                <Button x:Name="BtnPrevious" Style="{StaticResource DisableableButton}" Content="{StaticResource ResourceKey=PreviousIcon}" Tag="Off" Grid.Column="2" Padding="0" BorderThickness="0" Width="50" IsEnabled="False" Click="BtnPrevious_Click"/>
                <Button x:Name="BtnPlayPause" Style="{StaticResource DisableableButton}" Content="{DynamicResource ResourceKey=PlayIcon}" Grid.Column="3" Padding="0" BorderThickness="0" Width="50" IsEnabled="False" Click="BtnPlayPause_Click"/>
                <Button x:Name="BtnNext" Style="{StaticResource DisableableButton}" Content="{StaticResource NextIcon}" Grid.Column="4" Padding="0" BorderThickness="0" Width="50" IsEnabled="False" Click="BtnNext_Click"/>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Slider Style="{StaticResource TrackSlider}" x:Name="TrackSlider" VerticalAlignment="Bottom" Thumb.DragStarted="TrackSlider_DragStarted" Thumb.DragCompleted="TrackSlider_DragCompleted" ValueChanged="TrackSlider_ValueChanged" IsEnabled="False"/>
                <Label x:Name="LabelTrackTime" Content="" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource OctoOrange}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
